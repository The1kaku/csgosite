{"version":3,"sources":["components/article/header/imgs/title_image1156x650.jpg","components/article/header/Header.js","components/article/howToPlay/imgs/team_select1156x650.jpg","components/article/howToPlay/imgs/G2ESL-Pro-League453x255.jpg","components/article/howToPlay/imgs/cs_go_old453x254.jpg","WordListObject.js","components/article/explainedText/ExplainedText.js","components/article/howToPlay/HowToPlay.js","components/article/teamSportOnTheInternet/imgs/mirage_a_site965x543.jpg","components/article/teamSportOnTheInternet/imgs/global_elite478x250.jpg","components/article/teamSportOnTheInternet/imgs/dust2_map428x428.jpg","components/article/teamSportOnTheInternet/imgs/svenska_elit_serien428x428.jpg","components/article/teamSportOnTheInternet/imgs/nip1156x650.jpg","components/article/teamSportOnTheInternet/TeamSport.js","components/article/realLifeAndCSGO/imgs/guns527x388.png","components/article/realLifeAndCSGO/imgs/ranks407x407.jpg","components/article/realLifeAndCSGO/imgs/csgo-esl-tournaments1156x650.png","components/article/realLifeAndCSGO/RealLife.js","components/article/wordList/WordList.js","components/article/ageRecommendations/AgeRecommendations.js","components/article/footer/Footer.js","components/article/Article.js","components/navigation/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["Header","id","className","src","title_image","alt","wordList","word","explanation","regexp","FoundWord","start_idx","end_idx","this","Result","str","ExplainedText","props","array","text","result","foundWords","forEach","RegExp","matches","matchAll","match","foundWord","index","length","push","sort","a","b","split_end","split_start","splitString","slice","parseText","state","map","item","React","Component","HowToPlay","TeamSelect","EslProLeague","CsgoOld","TeamSport","Mirage","GlobalElite","DustMap","ElitSerien","NinjasInPyjamas","RealLife","Guns","Ranks","EslTournament","WordList","AgeRecommendations","Footer","Article","navItems","link","Navigation","useState","navOpen","setNavOpen","onClick","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bed620db.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/title_image1156x650.fb84be11.jpg\";","import React from 'react';\r\nimport './header.scss';\r\nimport title_image from './imgs/title_image1156x650.jpg';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div id=\"Header\" className=\"section\">\r\n            <h1>Föräldrarguide till spelet<span> CS:GO</span></h1>\r\n            <span>Av Villiam Taxén <br/>& Måns Zetterström</span>\r\n            <img src={title_image} alt=\"Big CS:GO wallpaper\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/team_select1156x650.7cac5930.jpg\";","export default __webpack_public_path__ + \"static/media/G2ESL-Pro-League453x255.5121dcff.jpg\";","export default __webpack_public_path__ + \"static/media/cs_go_old453x254.ff665a1d.jpg\";","export const wordList = [\r\n    {\r\n      id: 1,\r\n      word: \"Map\",\r\n      explanation: \"Bana där selet spelas.\",\r\n      regexp: \" Map\"\r\n    },\r\n    {\r\n      id: 2,\r\n      word: \"Eco\",\r\n      explanation: \"Ekonomisk runda, en runda där man avstår från köp för att spara till inköp inför rundan därefter.\",\r\n      regexp: \" Eco\"\r\n    },\r\n    {\r\n      id: 3,\r\n      word: \"Force buy\",\r\n      explanation: \"Köpa vapen när man har lite pengar för att inte förlora en viktig runda\",\r\n      regexp: \"( Force Buy| Force)\"\r\n    },\r\n    {\r\n      id: 4,\r\n      word: \"Save\",\r\n      explanation: \"Om man inte kan vinna rundan så gömmer man sig för att spara sitt vapen till nästa runda.\",\r\n      regexp: \" Save\"\r\n    },\r\n    {\r\n      id: 5,\r\n      word: \"Prime\",\r\n      explanation: \"När man är nivå 30, eller om man valt att köpa Prime, så är det mindre chans att möta fuskare eftersom de antagligen blivit bannade innan de nått nivå 30 eller så vill de inte köpa Prime om dem fuskar för de vet att de kommer bli bannade för eller senare.\",\r\n      regexp: \" Prime\"\r\n    },\r\n    {\r\n      id: 6,\r\n      word: \"Spawnas\",\r\n      explanation: \"Att materialiseras man brukar säga att man kommer till spawn i början av rundan, alla spelarna i de olika lagen spawnar på ett eget ställe\",\r\n      regexp: \"( Spawnas| Spawnar| Spawn)\"\r\n    },\r\n    {\r\n      id: 7,\r\n      word: \"CT \",\r\n      explanation: \"(Counter Terrorist) Polis/insatsstyrka\",\r\n      regexp: \"( CT's | CT ) \"\r\n    },\r\n    {\r\n      id: 8,\r\n      word: \"T \",\r\n      explanation: \"(Terrorist) Terrorist\",\r\n      regexp: \"( T's | T )\"\r\n    },\r\n    {\r\n      id: 9,\r\n      word: \"Callouts\",\r\n      explanation: \"Namn på en specifik plats på en karta\",\r\n      regexp: \"( Calls|Callouts)\"\r\n    },\r\n    {\r\n      id: 10,\r\n      word: \"Site\",\r\n      explanation: \"Plats där terrorist laget armerar bomben - Bombplats.\",\r\n      regexp: \" Site\"\r\n    },\r\n    {\r\n      id: 11,\r\n      word: \"Smoke\",\r\n      explanation: \"Rökgranat\",\r\n      regexp: \"( Smoke Grenade| Smoke)\"\r\n    },\r\n    {\r\n      id: 12,\r\n      word: \"Grenade\",\r\n      explanation: \"Granat\",\r\n      regexp: \"( Grenade| Nade)\"\r\n    },\r\n    {\r\n      id: 13,\r\n      word: \"Flash\",\r\n      explanation: \"(Flashbang) Chockgranat\",\r\n      regexp: \"( Flashbang| Flash)\"\r\n    },\r\n    {\r\n      id: 14,\r\n      word: \"Molotov\",\r\n      explanation: \"Eldgranat\",\r\n      regexp: \" Molotov\"\r\n    },\r\n    {\r\n      id: 15,\r\n      word: \"Decoy\",\r\n      explanation: \"Lockgranat, till för att vilseleda motståndaren\",\r\n      regexp: \" Decoy\"\r\n    },\r\n  ];","import React from 'react';\r\nimport './explainedtext.scss';\r\nimport { wordList } from '../../../WordListObject';\r\n\r\n// Method 2\r\n/*\r\n    1. Find and save all occurances of all words in an array.\r\n\r\n    2. Order them\r\n\r\n    3. Split the text according to the found words and save them in an array\r\n\r\n    4. Return the arrays.\r\n\r\n*/\r\n\r\n\r\n// Method 2 - Explained\r\n/*\r\n    1. Create FOUND_WORDS array by Looping through all the words in wordList\r\n\r\n        1.1 Put current word in an array of objects\r\n            1.1.1 Save the WORD\r\n            1.1.2 Save the START_IDX\r\n            1.1.3 Save the END_IDX\r\n            1.1.4 Save the WORD_ID\r\n\r\n\r\n    2. Order the FOUND_WORDS array by START_IDX\r\n\r\n\r\n\r\n    3. Create SPLIT_STRINGS array by Looping through the FOUND_WORDS array\r\n\r\n        3.1 Set variables\r\n            3.1.1 Set SPLIT_START = 0\r\n            3.1.3 Set N = 0\r\n            3.1.2 Set SPLIT_END = FOUND_WORDS[N].START_IDX\r\n\r\n        3.2 Split from SPLIT_START to SPLIT_END\r\n            3.2.1 Set SPLIT_START = FOUND_WORDS[N].END_IDX\r\n            3.2.2 Set N += 1\r\n            3.2.3 Set SPLIT_END = FOUND_WORDS[N].START_IDX\r\n\r\n\r\n\r\n    4. Return SPLIT_STRINGS and FOUND_WORDS.ID in an array\r\n*/\r\n\r\nclass FoundWord {\r\n    constructor(word, start_idx, end_idx, id) {\r\n        this.word = word;\r\n        this.start_idx = start_idx;\r\n        this.end_idx = end_idx;\r\n        this.id = id;\r\n    }\r\n};\r\n\r\nclass Result  {\r\n    constructor(str, id) {\r\n        this.str = str;\r\n        this.id = id;\r\n    }\r\n};\r\n\r\nfunction parseText(text) {\r\n    const result = [];\r\n    const foundWords = [];\r\n\r\n    // Step 1\r\n    wordList.forEach(word => {\r\n        const regexp = new RegExp(word.regexp, \"gi\");\r\n        const matches = text.matchAll(regexp); \r\n\r\n        for (const match of matches) {\r\n            const foundWord = new FoundWord(word.word, match.index, match.index + match[0].length, word.id);\r\n            foundWords.push(foundWord);\r\n        }\r\n    });\r\n\r\n    if (foundWords.length === 0) return new Result(text, null);\r\n    // Step 2\r\n    foundWords.sort(function(a, b){return a.start_idx-b.start_idx});\r\n\r\n    // Step 3 + 4\r\n    let split_start = 0; let split_end;\r\n\r\n    foundWords.forEach(word => {\r\n        split_end = word.start_idx;\r\n        const splitString = text.slice(split_start, split_end);\r\n        result.push(new Result(splitString, word.id));\r\n        split_start = word.end_idx;\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\nclass ExplainedText extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const array = parseText(this.props.text);\r\n        this.state = {\r\n            array: array,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <p>\r\n                {(this.state.array.id !== null) ? this.state.array.map((item, index) => {\r\n                    return <span key={index}>\r\n                        {item.str}\r\n                        <span className='explanationWrapper'>\r\n                            <span className='explanationTrigger'>\r\n                                {' ' + wordList[item.id-1].word}\r\n                            </span>\r\n                            <span className='explanation'>\r\n                                {wordList[item.id-1].explanation}\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                }) : this.state.array.str}\r\n            </p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExplainedText;","import React from 'react';\r\nimport './howtoplay.scss';\r\nimport TeamSelect from './imgs/team_select1156x650.jpg';\r\nimport EslProLeague from './imgs/G2ESL-Pro-League453x255.jpg';\r\nimport CsgoOld from './imgs/cs_go_old453x254.jpg';\r\n\r\nimport ExplainedText from '../explainedText/ExplainedText';\r\n\r\nconst HowToPlay = () => {\r\n    const text1 = 'CS:GO är ett first person shooter spel som är gjort av Valve. CS:GO är en förkortning av Counter Strike: Global Offensive. Ett first player shooter spel är ett spel där man ser allt från en personlig vinkel och där man skjuter fiender. Spelet kom 2012 men det finns tidigare utgåvor av spelet. Det första Counter Strike spelet släpptes bara som ett test spel, men blev så populärt att Valve valde att utveckla serien vidare. ';\r\n    const text2 = 'I början av varje runda kan man köpa vapen, kevlar och granater. Om man är CT kan man även köpa ett desarmerings kit som gör att man kan desarmera bomber snabbare. De olika vapnen som finns att köpa kan delas upp i fyra kategorier; gevär, SMG, pistoler och tunga vapen även kallade heavy. Bland gevären finns bland annat ak-47 för T och M4 för CT och AWP. I kategorin SMG finns olika sorters k-pistar. En SMG är ett mindre semi-automatiskt vapen som oftast skjuter snabbare men gör mindre skada. I kategorin Pistoler finns det olika små pistoler. Sist, i kategorin Heavy finner man shotguns (hagelbössor), samt de tunga maskingäveren: m249 och Negev. ';\r\n    const text3 = 'När runda 1 börjar förses man med 800$, en pistol och en kniv. I varje runda får man bonuspengar beroende på om man lyckats armera/desarmera en bomb och baserat på hur många kills, dvs. hur många i motståndarlaget man dödat, man fått. När man köpt eller plockat upp ett vapen från marken under en runda så har man det med sig i nästa runda om man inte dött. Om man dör måste man vänta tills nästa runda startar. Vid nästa runda spawnas, materialiseras, man med en pistol om man dör och pengarna man redan hade plus dem man tjänade under rundan innan. Alla i sitt lag spawnas på samma ställe. ';\r\n    return (\r\n        <div id=\"HowToPlay\" className=\"section\">\r\n            <h2>Hur man spelar</h2>\r\n            <ExplainedText text={text1}/>\r\n            <img src={TeamSelect} alt=\"Team Select\"/>\r\n            <div className=\"columns\">\r\n                <div className=\"column\">\r\n                    <ExplainedText text={text2}/>\r\n                    <img src={EslProLeague} alt=\"ESL Pro League\" />\r\n                </div>\r\n                <div className=\"column\">\r\n                    <img src={CsgoOld} alt=\"CS:GO Old\" />\r\n                    <ExplainedText text={text3}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HowToPlay;","export default __webpack_public_path__ + \"static/media/mirage_a_site965x543.e929bcea.jpg\";","export default __webpack_public_path__ + \"static/media/global_elite478x250.0049f7dd.jpg\";","export default __webpack_public_path__ + \"static/media/dust2_map428x428.f330f252.jpg\";","export default __webpack_public_path__ + \"static/media/svenska_elit_serien428x428.d74fa89f.jpg\";","export default __webpack_public_path__ + \"static/media/nip1156x650.ad776510.jpg\";","import React from 'react';\r\nimport './teamsport.scss';\r\nimport Mirage from './imgs/mirage_a_site965x543.jpg';\r\nimport GlobalElite from './imgs/global_elite478x250.jpg';\r\nimport DustMap from './imgs/dust2_map428x428.jpg';\r\nimport ElitSerien from './imgs/svenska_elit_serien428x428.jpg'\r\nimport NinjasInPyjamas from './imgs/nip1156x650.jpg';\r\n\r\nimport ExplainedText from '../explainedText/ExplainedText';\r\n\r\n\r\n\r\n\r\nconst TeamSport = () => {\r\n    const text1 = 'Den vanligaste strategin för CT är att man spelaren med 2 spelare på varje bombplats och en spelare mitt mellan dem. Man har en spelare i mitten så dom kan rotera över till den plats som behöver hjälp. För T är det vanligt att man går hela laget mot en site. Som CT så brukar man kasta rökbomber vid ingångarna till bombplatsen så att det blir svårare för T att komma dit. Om man har lite pengar inför en runda kan man köra en eco runda vilket betyder att man inte köper något. De gör så att man kan köpa bättre vapen och mer granater nästa runda. Man kan även tvingas till en force buy, där man köper vapen även fast att man har för lite pengar för att inte förlora en viktig runda. ';\r\n    const text2 = 'På olika banor finns olika calls, namn på olika positioner. Dem används för att berätta vart motståndarna är för sina medspelare. Exempel på en call som man kan säga är till exempel “Popdog”, men det säger man bara på mappen Train där det finns ett rum som kallas Popdog. Man använder de för att göra kommunikationen enklare och snabbare så att ens lagkamrater kan agera genom att ta skydd eller attackera motståndaren. Ett annat sätt att använda calls är förkortningarna på ställen till exempel “Jag smokar connector”, som betyder att man kastar en rökgranat till stället connector. Samma sak kan man säga om man ska kasta en chockgranat, granat, molotov eller lockgranat. ';\r\n    const text3 = 'I spelet är det viktigt med samarbete för då vinner man oftast mycket mer än om man inte samarbetar alls. Ibland kan man vinna utan samarbete men det är oftast på grund av att några i laget presterar mycket bättre individuellt. Eftersom CS:GO är ett stort spel och spelas runt hela jorden så är det viktigt att kunna prata engelska. Detta gör att man blir van att prata engelska. Man får även en bättre reaktionsförmåga eftersom man måste kunna skjuta motståndaren innan han hinner skjuta dig. ';\r\n    const text4 = 'Under en match så kan man ha en timeout på en minut där man kan gå och dricka vatten, gå på toa eller starta om spelet om det kraschat. Man kan inte pausa en match eftersom det är ett online spel. Om man lämnar en match så kommer man inte kunna spela en till match på 30 min. Om man lämnat matcher flera gånger så kan man bli bannad, avstängd, på olika lång tid. ';\r\n    return (\r\n        <div id=\"TeamSport\" className=\"section\">\r\n            <h2>En lagsport på internet</h2>\r\n            <ExplainedText text={text1}/>\r\n            <div className=\"columns\">\r\n                <div className=\"column\">\r\n                    <img src={Mirage} alt=\"Mirage Map\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"columns\">\r\n                <div className=\"column\">\r\n                    <ExplainedText text={text2}/>\r\n                    <img src={GlobalElite} alt=\"Global Elite\" />\r\n                    <ExplainedText text={text3}/>\r\n                </div>\r\n                <div className=\"column\">\r\n                    <img src={DustMap} alt=\"Map 1\" />\r\n                    <img src={DustMap} alt=\"Map 2\" />\r\n                    <ExplainedText text={text4}/>\r\n                    <img src={ElitSerien} alt=\"Svenska ElitSerien\" />\r\n                </div>\r\n            </div>\r\n            <img src={NinjasInPyjamas} alt=\"Ninjas In Pyjamas\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeamSport;","export default __webpack_public_path__ + \"static/media/guns527x388.63c79b2a.png\";","export default __webpack_public_path__ + \"static/media/ranks407x407.eeeea038.jpg\";","export default __webpack_public_path__ + \"static/media/csgo-esl-tournaments1156x650.ccdd0ba9.png\";","import React from 'react';\r\nimport './reallife.scss';\r\nimport Guns from './imgs/guns527x388.png';\r\nimport Ranks from './imgs/ranks407x407.jpg';\r\nimport EslTournament from './imgs/csgo-esl-tournaments1156x650.png'\r\nimport ExplainedText from '../explainedText/ExplainedText';\r\n\r\nconst RealLife = () => {\r\n    const text1 = 'I spelet finns det skins på de olika vapnen i spelet som ändrar utseendet på ditt vapen, Vissa skins kan kosta 1 krona medans ett annat kan kosta upp till 20 000 kronor. I spelet finns olika ranker som visar hur bra man är. Det finns 9 ranker och av dem är Global Elite den högsta ranken. ';\r\n    const text2 = 'CS:GO är en av de största e-sporterna. Varje år så spelas det många turneringar varav två är “Majors”. Det går ut på samma sak som en fotbollsturnering, man möter andra lag och den som förlorar slås ut från turneringen. De två lagen som kommer till finalen slåss om en stor summa pengar som man vinner. 2018 fanns det en prispott på 1,000,000 dollar. Det bästa laget i världen just nu är Team Vitality.';\r\n    return (\r\n        <div id=\"RealLife\" className=\"section\">\r\n            <h2>Riktiga livet och CS</h2>\r\n            <div className=\"columns\">\r\n                <div className=\"column\">\r\n                    <ExplainedText text={text1}/>\r\n                    <img src={Guns} alt=\"Guns\" />\r\n                </div>\r\n                <div className=\"column\">\r\n                    <img src={Ranks} alt=\"ranks\" />\r\n                    <ExplainedText text={text2}/>\r\n                </div>\r\n            </div>\r\n            <img src={EslTournament} alt=\"Cologne Tournament\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RealLife;","import React from 'react';\r\nimport './wordList.scss';\r\nimport { wordList } from '../../../WordListObject';\r\n\r\nconst WordList = () => {\r\n    return ( \r\n      <div id=\"WordList\" className=\"section\">\r\n        <h2>Ordlista</h2>\r\n        <ul>\r\n          {wordList.map(function(wordList) {\r\n            return (\r\n              <li key={wordList.id}>\r\n                <span className=\"bold\">{wordList.word}</span>\r\n                <span className=\"explanation\">{wordList.explanation}</span>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default WordList;","import React from 'react';\r\nimport './agerecommendations.scss';\r\nimport ExplainedText from '../explainedText/ExplainedText';\r\n\r\nconst AgeRecommendations = () => {\r\n    const text1 = 'Enligt statistik från Ungar och medier 2017 (sid 45), är ett av de mest populära spelet för pojkar mellan 13-16 år just Counter-Strike: Global Offensive som har PEGI 18-märkning. Spel som klassifieras som PEGI 18 av den europeiska standarden för åldersmärkning för spel som kallas PEGI (Pan-European-Game-Information) är bäst lämpat för vuxna då det kan innehålla grovt, omotiverat, grafiskt våld eller våld mot försvarslösa karaktärer. Spel med klassificeringen PEGI 18 kan även innehålla grafiskt sexuellt innehåll eller användande av alkohol och droger på ett sätt som kan upplevas glamoriserande. Det är inte lagstadgat att följa PEGI-märkningen. Vissa barn tål mer än andra, så det är upp till var vårdnadshavare att avgöra vad man anser lämpligt för sitt barn.';\r\n    return (\r\n        <div id=\"AgeRecommendations\" className=\"section\">\r\n            <h2>Åldersrekommendation</h2>\r\n            <ExplainedText text={text1}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AgeRecommendations;","import React from 'react';\r\nimport './footer.scss';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div id=\"Footer\" className=\"section\">\r\n            <span>learn react</span>\r\n            <span>Text redigering och design av Lukas Samby - 15.01.2021</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './article.scss';\r\nimport Header from './header/Header';\r\nimport HowToPlay from './howToPlay/HowToPlay';\r\nimport TeamSport from './teamSportOnTheInternet/TeamSport';\r\nimport RealLife from './realLifeAndCSGO/RealLife';\r\nimport WordList from './wordList/WordList';\r\nimport AgeRecommendations from './ageRecommendations/AgeRecommendations';\r\nimport Footer from './footer/Footer';\r\n\r\nconst Article = () => {\r\n    return (\r\n        <div id=\"Article\">\r\n            <Header/>\r\n            <HowToPlay/>\r\n            <TeamSport/>\r\n            <RealLife/>\r\n            <WordList/>\r\n            <AgeRecommendations/>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Article;","import React, { useState } from 'react';\r\nimport './navigation.scss';\r\n\r\nconst navItems = [\r\n    {\r\n        id: 1,\r\n        text: \"Hur Man Spelar\",\r\n        link: \"#HowToPlay\"\r\n    },\r\n    {\r\n        id: 2,\r\n        text: \"En lagsport på internet\",\r\n        link: \"#TeamSport\"\r\n    },\r\n    {\r\n        id: 3,\r\n        text: \"Riktiga livet och CS\",\r\n        link: \"#RealLife\"\r\n    },\r\n    {\r\n        id: 4,\r\n        text: \"Ordlista\",\r\n        link: \"#WordList\"\r\n    },\r\n    {\r\n        id: 5,\r\n        text: \"Åldersrekommendation\",\r\n        link: \"#AgeRecommendations\"\r\n    },\r\n];\r\n\r\nconst Navigation = () => {\r\n\r\n    const [navOpen, setNavOpen] = useState(false);\r\n\r\n    const handleToggle = () => {\r\n        setNavOpen(!navOpen);\r\n    }\r\n\r\n    return (\r\n        <div id=\"Navigation\">\r\n            <button id=\"Hamburger\" onClick={handleToggle} className={`${navOpen ? \"cross\" : \"\"}`}><span></span></button>\r\n            <ul className={`${navOpen ? \"showNavigation\" : \"\"}`}>\r\n            {navItems.map(function(navItems) {\r\n                return (\r\n                <li key={navItems.id}>\r\n                    <a href={navItems.link}>{navItems.text}</a>\r\n                </li>\r\n                );\r\n            })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\nimport Article from './components/article/Article';\nimport Navigation from './components/navigation/Navigation';\nimport './app.scss';\nimport './main.scss';\n\n\nfunction App() {\n  return (\n    <div id=\"App\">\n      <Navigation />\n      <Article />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}